---
import Layout from '../layouts/Layout.astro';
import { marked } from 'marked';
import { RateLimitedOpenAI } from '../lib/openai';

const openai = new RateLimitedOpenAI(
  Astro.locals.runtime.env.OPENAI_API_KEY,
  Astro.locals.runtime.env.TOKEN_USAGE
);

const { path } = Astro.params;
const formattedPath = path?.replace(/[/-]/g, ' ').trim() || '404';

// Try to get cached article first
let guideEntry = await Astro.locals.runtime.env.ARTICLES.get(path || '404', 'text');

if (!guideEntry) {
  // Generate new content if not cached
  const completion = await openai.createChatCompletion([
    {
      role: "system",
      content: `You are the Hitchhiker's Guide to the Galaxy. Respond in the style of Douglas Adams with wit, humor, and mild absurdity. Use markdown formatting for emphasis, lists, and quotes. Keep responses between 3-4 paragraphs.

IMPORTANT: Throughout your response, create internal links to other imaginary Guide entries. Format these as markdown links with kebab-case URLs, e.g. [Infinite Improbability Drive](/infinite-improbability-drive) or [Sub-Etha Sens-O-Matic](/sub-etha-sens-o-matic). Add at least 3-4 such links naturally within the text. Each link should have its own unique, imaginary URL path starting with a forward slash.

Example paragraph with links:
"The [Babel Fish](/babel-fish) has revolutionized interstellar communication, though the [Galactic Institute of Linguistics](/galactic-institute-of-linguistics) still debates whether it should be classified as a fish or a particularly ambitious translator. Some scholars at the [Maximegalon University](/maximegalon-university) suggest it's actually a very small, very wet computer."`
    },
    {
      role: "user",
      content: `Write a Hitchhiker's Guide to the Galaxy style entry about "${formattedPath}". Make it humorous and slightly absurd, as if it's an entry in the actual Guide. Include at least 3-4 internal links to other imaginary Guide entries, formatted as markdown links with proper URL paths.`
    }
  ]);

  const content = completion.choices[0].message.content || '';
  
  // Only cache if it's not a limit exceeded response
  if (!content.includes("currently overloaded with requests")) {
    await Astro.locals.runtime.env.ARTICLES.put(path || '404', content);
  }
  
  guideEntry = content;
}

const renderedEntry = marked(guideEntry);
---

<Layout>
  <div id="stars"></div>
  <div id="stars2"></div>
  <div id="stars3"></div>
  
  <div id="container">
    <main>
      <section id="hero">
        <h1>DON'T PANIC</h1>
        <p class="subtitle">The Guide's Entry on: {formattedPath}</p>
        <div class="guide-entry">
          <div class="guide-text" set:html={renderedEntry} />
          <p class="note">Note: The Hitchhiker's Guide to the Galaxy has this to say about lost travelers: "Don't Panic"</p>
        </div>
        <section id="links">
          <a class="button" href="/">Return to Earth</a>
        </section>
      </section>
    </main>
  </div>
</Layout>

<style>
  #container {
    height: 100%;
    padding: 2rem;
  }

  main {
    height: 100%;
    display: flex;
    justify-content: center;
    max-width: 800px;
    margin: 0 auto;
  }

  #hero {
    display: flex;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    padding: 16px;
  }

  h1 {
    font-size: 4rem;
    margin: 0;
    letter-spacing: 4px;
    text-shadow: 0 0 20px var(--guide-green);
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% { text-shadow: 0 0 20px var(--guide-green); }
    50% { text-shadow: 0 0 40px var(--guide-green); }
    100% { text-shadow: 0 0 20px var(--guide-green); }
  }

  .subtitle {
    font-size: 1.5rem;
    margin: 1rem 0;
    opacity: 0.8;
  }

  .guide-quote {
    font-style: italic;
    opacity: 0.6;
    max-width: 600px;
    margin: 0 0 2rem;
  }

  #links {
    display: flex;
    gap: 16px;
  }

  .button {
    display: flex;
    align-items: center;
    padding: 12px 24px;
    color: #000;
    background: var(--guide-green);
    text-decoration: none;
    border-radius: 4px;
    font-weight: bold;
    transition: all 0.2s;
  }

  .button:hover {
    background: #fff;
    box-shadow: 0 0 20px var(--guide-green);
    transform: scale(1.05);
  }

  .guide-entry {
    background: rgba(37, 248, 142, 0.1);
    border: 1px solid var(--guide-green);
    border-radius: 8px;
    padding: 2rem;
    margin: 2rem 0;
    max-width: 600px;
    text-align: left;
    backdrop-filter: blur(5px);
  }

  .guide-text {
    font-size: 1.1rem;
    line-height: 1.6;
    margin: 0 0 1.5rem;
  }

  .guide-text :global(p) {
    margin: 1rem 0;
  }

  .guide-text :global(p:first-child) {
    margin-top: 0;
  }

  .guide-text :global(p:last-child) {
    margin-bottom: 0;
  }

  .guide-text :global(em) {
    color: #fff;
    font-style: italic;
  }

  .guide-text :global(strong) {
    color: #fff;
    font-weight: bold;
  }

  .guide-text :global(blockquote) {
    margin: 1rem 0;
    padding-left: 1rem;
    border-left: 2px solid var(--guide-green);
    font-style: italic;
    opacity: 0.9;
  }

  .guide-text :global(ul), .guide-text :global(ol) {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .guide-text :global(li) {
    margin: 0.5rem 0;
  }

  .note {
    font-size: 0.9rem;
    opacity: 0.8;
    font-style: italic;
    margin: 0;
  }

  @media screen and (max-width: 768px) {
    h1 {
      font-size: 3rem;
    }

    .guide-quote {
      font-size: 0.9rem;
    }
  }
</style>